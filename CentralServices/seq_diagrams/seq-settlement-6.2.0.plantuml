@startuml
' declate title
title 6.2.0. Returns Settlement(s) as per parameters/filter criteria

autonumber

' declare actors
actor "Hub Employee" as OPERATOR
boundary "Settlement Service API" as SSAPI
entity "Settlement DAO" as SETTLE_DAO
database "Central Store" as DB

box "Central HUB" #LightPink
    participant OPERATOR
end box

box "Settlement Service" #LightGreen
    participant SSAPI
    participant SETTLE_DAO
end box

box "Central Services" #LightYellow
    participant DB
end box

' start flow
group Request Settlement Details
    activate OPERATOR
    note right of OPERATOR #Yellow
        **Filtering Params:**
        &settlementWindowId=/settlementWindow/{id}
        &currencyId=/currency/{id}
        &participantId=/participant/{id}
        &accountId=/account/{id}
        &state={state}
        &fromDateTime={yyyy-mm-ddThh:mm}
        &toDateTime={yyyy-mm-ddThh:mm}
    end note

    OPERATOR -> SSAPI: GET - /settlement/{id}
    activate SSAPI
    SSAPI -> SETTLE_DAO: Retrieve settlement details\n<color #FF0000><b>Error code:</b> 2001</color>
    activate SETTLE_DAO

    SETTLE_DAO -> DB: Select settlement from DB
    activate DB
    hnote over DB #LightYellow
        SELECT FROM
        **settlement**
            settlementId
        **settlementSettlementChange**
            settlementStateId
    end hnote

        SETTLE_DAO <-- DB: Return data
        deactivate DB
        note left of SETTLE_DAO #LightGray
            **settlementData**
            Contains information about settlement
            -state
        end note
        SSAPI <-- SETTLE_DAO: Return **settlementData**
        deactivate SETTLE_DAO
    alt Settlement found

        SSAPI -> SETTLE_DAO: Retrieve full information for settlement windows\n<color #FF0000><b>Error code:</b> 2001</color>
        activate SETTLE_DAO
        SETTLE_DAO -> DB: Select from DB
        activate DB
        hnote over DB #LightYellow
            **settlementSettlementWindow**
                settlementId
                settlementWindowId
            **settlementWindow**
                createdDate
            **settlementWindowStateChange**
                reason
                createdDate (changedDate)

        end hnote
        SETTLE_DAO <-- DB: Return data
        deactivate DB
        note left of SETTLE_DAO #LightGray
            **windowsList**
            Contains about settlement windows in settlement
            -settlementWindowId
            -reason
            -state
            -createdDate
            -changedDate
        end note
        SSAPI <-- SETTLE_DAO: Return **windowsList**
        deactivate SETTLE_DAO

        SSAPI -> SETTLE_DAO: Retrieve information for settlement accounts\n<color #FF0000><b>Error code:</b> 2001</color>
        activate SETTLE_DAO
        SETTLE_DAO -> DB: Select from DB
        activate DB
        hnote over DB #LightYellow
            SELECT FROM
            **transferFulfilment**
                transferid
                settlementWindowId
            **transferParticipant**
                transferId
                participantCurrencyId
            **participantCurrency**
                participantCurrencyId
                participantId
                currencyId
            **settlementParticipantCurrency**
                settlementId - ?
                participantCurrencyId
                netAmount
            **settlementSettlementCurrencyStateChange**
                settlementStateId
                reason

        end hnote
        SETTLE_DAO <-- DB: Return data
        deactivate DB
        note left of SETTLE_DAO #LightGray
            **settlementAccountsList**
            Holds information about all accounts in settlement
            -settlementWindowId
                -participantId
                    -participantCurrencyId (account)
                    -reason
                    -state
                    -amount (netAmount)
                    -currencyId
        end note
        SSAPI <-- SETTLE_DAO: Return **settlementAccountsList**
        deactivate SETTLE_DAO

        note right of SSAPI #Pink
        **Design still in progress**

        settlementId = /settlement/{id}
        loop
            settlementWindowId = &settlementWindowId
            createdDate >= &fromDateTime
            createdDate <= &toDateTime
            loop
                participantId = &participantId
                loop
                    participantCurrencyId = &account
                    currencyId = &currency
                    state = &state
                end
            end
        end


        Apply filters to datalist(s) from DB

        Format reply messages
        end note

        SSAPI <-- SETTLE_DAO: Operation successfully completed
        note left of SSAPI #Yellow
            [
              {
                "Id": 0,
                "State": "string",
                "settlementWindows": [
                  [
                    {
                      "id": 0,
                      "reason": "string",
                      "state": "string",
                      "createdDate": "string",
                      "changedDate": "string"
                    }
                  ]
                ],
                "Participants": [
                  {
                    "id": 0,
                    "accounts": [
                      {
                        "id": "string",
                        "reason": "string",
                        "state": "PENDING-SETTLEMENT",
                        "netSettlementAmount": {
                          "amount": 0,
                          "currency": "string"
                        }
                      }
                    ]
                  }
                ]
              }
            ]
        end note
        OPERATOR <-- SSAPI: Return results
    deactivate SSAPI
    else Settlement not found
        note right of SSAPI #lightgray
            Log ERROR event
        end note
        note left of SSAPI #yellow
            {
                "status": 0,
                "code": <integer>,
                "message": <string>
            }
        end note
        OPERATOR <-- SSAPI: Respond HTTP - <color #FF0000>4xx (Client error)</color>
        deactivate SSAPI
    deactivate OPERATOR
    end
end
@enduml
