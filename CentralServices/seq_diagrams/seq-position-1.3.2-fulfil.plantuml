@startuml
' declate title
title 1.3.2 Fulfil Position Handler Consume

autonumber

' Actor Keys:
'   boundary - APIs/Interfaces, etc
'   collections - Kafka Topics
'   control - Kafka Consumers
'   entity - Database Access Objects
'   database - Database Persistence Store

' declare actors
control "Position Handler" as POS_HANDLER
collections "Transfer-Topic" as TOPIC_TRANSFERS
entity "Position DAO" as POS_DAO
' collections "Notification-Topic" as TOPIC_NOTIFICATIONS
' entity "Participant DAO" as PARTICIPANT_DAO
entity "Transfer DAO" as TRANS_DAO
database "Central Store" as DB

box "Central Service" #LightYellow
    participant POS_HANDLER
    participant TOPIC_TRANSFERS
    ' participant TOPIC_NOTIFICATIONS
    participant POS_DAO
    ' participant PARTICIPANT_DAO
    participant TRANS_DAO
    participant DB
end box

' start flow
activate POS_HANDLER
group Fulfil Position Handler Consume
   alt Calculate & Validate Latest Position Fulfil (success)
        POS_HANDLER -> POS_DAO: Request current state of transfer from DB
        activate POS_DAO
        POS_DAO -> DB: Retrieve current state of transfer from DB
        activate DB
        hnote over DB #lightyellow
            transferStateChange
        end note
        DB --> POS_DAO: Return current state of transfer from DB
        deactivate DB
        POS_DAO --> POS_HANDLER: Return current state of transfer from DB
        deactivate POS_DAO
        POS_HANDLER <-> POS_HANDLER: Validate current state (transferStateChange.transferStateId == 'RECEIVED-FULFIL')

        group Calculate position and persist change
            POS_HANDLER -> POS_DAO: Request latest position from DB for Payee
            activate POS_DAO
            POS_DAO -> DB: Retrieve latest position from DB for Payee
            activate DB
            hnote over DB #lightyellow
                participant
                participantPosition
            end note
            DB --> POS_DAO: Retrieve latest position from DB for Payee
            deactivate DB
            POS_DAO --> POS_HANDLER: Return latest position
            deactivate POS_DAO
            POS_HANDLER <-> POS_HANDLER: Calculate latest position ($latestPosition = participantPosition.reservedAmount - payload.amount.amount)
            POS_HANDLER -> POS_DAO: Request to persist latest position for Payee
            activate POS_DAO
            POS_DAO -> DB: Persist latest position to DB for Payee
            hnote over DB #lightyellow
                participantPosition
            end note
            activate DB
            deactivate DB
            POS_DAO --> POS_HANDLER: Return success
            deactivate POS_DAO
        end

        group Persist Transfer State (with transferState='COMMITTED')
            POS_HANDLER -> TRANS_DAO: Request to persist transfer
            activate TRANS_DAO
            TRANS_DAO -> DB: Persist transfer state
            hnote over DB #lightyellow
                transferStateChange
            end note
            activate DB
            deactivate DB
            TRANS_DAO --> POS_HANDLER: Return success
            deactivate TRANS_DAO
        end

        note right of POS_HANDLER #yellow
            Message:
            {
                id: <transferMessage.transferId>
                from: <transferMessage.payerFsp>,
                to: <transferMessage.payeeFsp>,
                type: application/json
                content: {
                    headers: <transferHeaders>,
                    payload: <transferMessage>
                },
                metadata: {
                    event: {
                        id: <uuid>,
                        responseTo: <previous.uuid>,
                        type: transfer,
                        action: commit,
                        createdAt: <timestamp>,
                        state: {
                            status: "success",
                            code: 0
                        }
                    }
                }
            }
        end note
        POS_HANDLER -> TOPIC_TRANSFERS: Publish Transfer event
        activate TOPIC_TRANSFERS
        deactivate TOPIC_TRANSFERS

   end
end
deactivate POS_HANDLER
@enduml
