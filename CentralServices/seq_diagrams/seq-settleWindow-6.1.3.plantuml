@startuml
' declate title
title 6.1.3. Request Settlement Window(s) as per parameter(s).

autonumber

' declare actors

actor "Hub Employee" as OPERATOR
boundary "Settlement Service API" as SSAPI
entity "Settlement DAO" as SETTLE_DAO
database "Central Store" as DB

box "Central HUB" #LightPink
    participant OPERATOR
end box

box "Settlement Service" #LightGreen
    participant SSAPI
    participant SETTLE_DAO
end box

box "Central Services" #LightYellow
    participant DB
end box

' start flow

group Retrieve SettlementWindow per parameters.
    activate OPERATOR
    note right of OPERATOR #Yellow
        **Filtering Params:**
        &participantId={id}
        &state={state}
        &fromDateTime={yyyy-mm-ddThh:mm}
        &toDateTime={yyyy-mm-ddThh:mm}
    end note
    OPERATOR -> SSAPI: GET - /settlementWindows/{params}
    activate SSAPI
    SSAPI -> SETTLE_DAO: Request settlementWindow\n<color #FF0000><b>Error code:</b> 2001</color>
    activate SETTLE_DAO
    SETTLE_DAO -> DB: Request settlementWindow
    activate DB
    hnote over DB #LightYellow
        settlementWindow
        settlementWindowStateChange
        transferFulfilment
        transferParticipant
        participantCurrency

    end hnote
    note over DB #LightGray
        NOTES for constructing database query

        settlementWindow -> **(createdDate)**
            **Optional Filter**
            {createdDate <= &fromDateTime & createdDate >= &toDateTime}

        settlementWindowStateChange -> (use settlementWindowId to **settlementWindowStateId** & **createdDate** & **reason**)
        NOTE - settlementWindowStateChange.createdDate = **changedDate**
            **Filter on &state** (note valid is 'OPEN' 'CLOSE' as per Swagger definition)
            (state) = {&state={state}}

        **transferFulfilment**  -> (use settlementWindowId = {id} to get transferId)
        **transferParticipant** -> (use transferId = transferId to get participantCurrencyId)
        **participantCurrency** -> (use participantCurrencyId to get participantId)
            **Filter on &participantId**
        (participantId) = {&participantId={id}}

    end note
    hnote over DB #LightYellow
    end hnote
    deactivate DB
    SSAPI <-- SETTLE_DAO: Return result
    deactivate SETTLE_DAO
    alt Return Settlement Window
        note left of SSAPI #Yellow
          [
            {
              "id": 0,
              "reason": "string",
              "state": "string",
              "createdDate": "string",
              "changedDate": "string"
            }
          ]
        end note
        OPERATOR <-- SSAPI: Respond HTTP - <color #FF0000>200 (OK)</color>
    else Settlement Window not found
        note right of SSAPI #lightgray
            Log ERROR event
        end note
        note left of SSAPI #yellow
            {
                "status": 0,
                "code": <integer>,
                "message": <string>
            }
        end note
        OPERATOR <-- SSAPI: Respond HTTP - <color #FF0000>4xx (Client error)</color>
        deactivate SSAPI
    deactivate OPERATOR
    end
end
@enduml
