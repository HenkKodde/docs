@startuml
' declate title
title Request to Close SettlementWindow
'title 6.1.2. closeSettlementWindow POST: /settlementWindows

autonumber

' declare actors
actor "Hub Employee" as OPERATOR

boundary "Settlement Service API" as SSAPI
entity "Settlement DAO" as SETTLE_DAO

database "Central Store" as DB

box "Central HUB" #LightPink
    participant OPERATOR
end box

box "Settlement Service" #LightGreen
    participant SSAPI
    participant SETTLE_DAO
end box

box "Central Services" #LightYellow
    participant DB
end box

' start flow
group Request closure of Settlement Window
    activate OPERATOR
    note right of OPERATOR #Yellow
        {
          "state": "closed",
          "reason": "motivation for closure."
        }
    end note
    OPERATOR -> SSAPI: POST - /settlementWindows/{id}
    activate SSAPI
    SSAPI -> SETTLE_DAO: Close settlementWindow<id> and open new settlementWindow
    activate SETTLE_DAO
    alt
        group <color #blue>DB TRANSACTION</color>
            SETTLE_DAO -> DB: Get state for settlementWindow from DB \n<color #FF0000><b>Error code:</b> 2001</color>
            activate DB
            note over DB #LightYellow
                GET
                **settlementWindowStateChange**
                    settlementWindowId = {id}
                    state
            end note
            hnote over DB #LightYellow
                SELECT sw.settlementWindowId, swsc.settlementWindowStateId
                FROM settlementWindow AS sw
                    JOIN (SELECT swsc.settlementWindowId,
                            MAX(swsc.settlementWindowStateChangeId)
                                AS maxSettlementWindowStateChangeId
                        FROM settlementWindowStateChange AS swsc
                        WHERE swsc.settlementWindowId
                        GROUP BY swsc.settlementWindowId) ssws
                    ON ssws.settlementWindowId = sw.settlementWindowId
                JOIN settlementWindowStateChange AS swsc
                ON swsc.settlementWindowStateChangeId = ssws.maxSettlementWindowStateChangeId
                WHERE sw.settlementWindowId = /settlementWindow/{id};
            end hnote
            deactivate DB
            group Validate window state
                SETTLE_DAO <--> SETTLE_DAO: Validate settlementWindowStateId == 'OPEN'
            end
            SETTLE_DAO -> DB: Insert settlementWindowStateId == 'CLOSED'
            note over DB #Lightpink
                Lock **settlementWindowStateChange** for read
            end note
            activate DB
            hnote over DB #LightYellow
                INSERT
                **settlementWindowStateChange**
                settlementWindowId = {id}
                state
                reason
            end hnote
            hnote over DB #LightYellow
                INSERT INTO settlementWindowStateChange
                    (settlementWindowId, settlementWindowStateId, reason)
                    VALUE (payload./settlementWindow/{id}, payload.state, paylaod.reason);
            end hnote
            deactivate DB
            SETTLE_DAO -> DB: Create new settlementWindow \n state == 'open'\n reason == 'motivation for new Window' \n<color #FF0000><b>Error code:</b> 2001</color>
            activate DB
            hnote over DB #LightYellow
                INSERT
                **settlementWindow**
                    reason

                GET
                **settlementWindow**
                    {new id}    "id"
                    createdDate "createDate"

                INSERT
                **settlementWindowStateChange**
                    {new id}
                    state
                    reason

                GET
                **settlementWindow**
                    {new id}    "id"
                    createdDate "createdDate"
                **settlementWindowStateChange**
                    {new id}
                    reason  "reason"
                    state   "state"
                    createdDate "changedDate"

'                INSERT INTO **settlementWindow**
'                    (reason)
'                    VALUE (payload.reason);
'
'                SELECT MAX(settlementWindowId) AS nsw
'                FROM **settlementWindow**
'                GROUP BY settlementWindowId
'                ORDER BY settlementWindowId DESC LIMIT 1;
'
'                INSERT INTO **settlementWindowStateChange**
'                    (settlementWindowId, settlementWindowStateId, reason)
'                    VALUE (nsw, 'OPEN', {reason});
            end hnote
            deactivate DB
            note over DB #Lightpink
            Unlock **settlementWindowStateChange**
            end note
        end
        SSAPI <-- DB: Operation successfully completed
        note left of SSAPI #Yellow
        {
          "id": 0,
          "reason": "string",
          "state": "string",
          "createdDate": "string",
          "changedDate": "string"
        }
        end note
        OPERATOR <-- SSAPI: Return results
        deactivate SSAPI
    else <color #FF0000><b>settlementWindow not found or settlementWindow state 'open'</b></color>

        SSAPI <-- SETTLE_DAO: settlementWindow not found - return ERROR
        deactivate SETTLE_DAO
        activate SSAPI
        SSAPI --> SSAPI: Update Event log
        note right of SSAPI #LightBlue
        Log ERROR Messages.
        Update Event log with ERROR.
        end note
        note left of SSAPI #Yellow
        {
          "status": 0,
              "code": "(ERROR response code eg. '404' - Defined in swagger definition))",
              "message": "string"
        }
        end note
        OPERATOR <-- SSAPI: Return ERROR
        deactivate SSAPI
        deactivate OPERATOR
    end
end
@enduml
