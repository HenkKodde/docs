@startuml
' declate title
title 6.1.2. Close Settlement Window

autonumber

' declare actors
actor "Hub Employee" as OPERATOR
boundary "Settlement Service API" as SSAPI
entity "Settlement DAO" as SETTLE_DAO
database "Central Store" as DB

box "Central HUB" #LightPink
    participant OPERATOR
end box

box "Settlement Service" #LightGreen
    participant SSAPI
    participant SETTLE_DAO
end box

box "Central Services" #LightYellow
    participant DB
end box

' start flow
group Request closure of Settlement Window
    activate OPERATOR
    note right of OPERATOR #Yellow
        {
            "state": "CLOSED",
            "reason": <string>
        }
    end note

    OPERATOR -> SSAPI: POST - /settlementWindows/{id}
    activate SSAPI
    SSAPI -> SSAPI: Validate payload and requested state
    break
        note right of SSAPI #yellow
            {
                "status": 0, <color #FF0000>**?**</color>
                "code": <integer>,
                "message": "Invalid payload or state"
            }
            <color #FF0000>**OR**</color> what is used in 6.2.5.:
            {
                errorInformation: {
                    "errorCode": <integer>,
                    "errorDescription": "Invalid payload or state"
                }
            }
        end note
        OPERATOR <-- SSAPI: Respond HTTP - <color #FF0000>400 (Bad Request)</color>
    end
    SSAPI -> SETTLE_DAO: Get requested settlementWindow and state\n<color #FF0000><b>Error code:</b> 2001</color>
    activate SETTLE_DAO
    SETTLE_DAO -> DB: Get settlementWindow state
    activate DB
    hnote over DB #lightyellow
        SELECT sw.settlementWindowId, swsc.settlementWindowStateId
        FROM settlementWindow AS sw
            JOIN (SELECT swsc1.settlementWindowId, 
                            MAX(swsc1.settlementWindowStateChangeId)
                            maxSettlementWindowStateChangeId
                    FROM settlementWindowStateChange AS swsc1
                    WHERE swsc1.settlementWindowId
                    GROUP BY swsc1.settlementWindowId) sws
            ON sws.settlementWindowId = sw.settlementWindowId
        JOIN settlementWindowStateChange AS swsc
        ON swsc.settlementWindowStateChangeId = sws.maxSettlementWindowStateChangeId
        WHERE sw.settlementWindowId = {id}
    end hnote
    deactivate DB
    SETTLE_DAO --> SSAPI: Return result
    deactivate SETTLE_DAO

    alt 1 row returned && settlementWindowStateId == 'OPEN'
        SSAPI -> SETTLE_DAO: Close current window and open a new one\n<color #FF0000><b>Error code:</b> 2001</color>
        activate SETTLE_DAO
        group <color #blue>DB TRANSACTION</color>
            SETTLE_DAO -> DB: Close requested window
            hnote over DB #LightYellow
                INSERT INTO **settlementWindowStateChange**
                       (settlementWindowId, settlementWindowStateId, reason)
                VALUES ({id}, payload.state, payload.reason)
            end hnote
            deactivate DB

            note right of SETTLE_DAO #lightgray
                let transactionTimestamp = now()
            end note

            SETTLE_DAO -> DB: Create new settlementWindow
            activate DB
            hnote over DB #lightyellow
                INSERT INTO **settlementWindow** (reason, createdDate)
                VALUES (payload.reason, transactionTimestamp)
            end note
            SETTLE_DAO <-- DB: Return @settlementWindowId
            deactivate DB

            SETTLE_DAO -> DB: Insert intial state for the created window
            activate DB
            hnote over DB #lightyellow
                INSERT INTO **settlementWindowStateChange**
                       (settlementWindowId, settlementWindowStateId, reason, createdDate)
                VALUES (@settlementWindowId, 'OPEN', payload.reason, transactionTimestamp)
            end note
            deactivate DB
            deactivate DB
        end
        SSAPI <-- SETTLE_DAO: Return success
        deactivate SETTLE_DAO

        note left of SSAPI #yellow
            {
                "id": 0,
                "reason": "string",
                "state": "string",
                "createdDate": "string",
                "changedDate": "string"
            }
        end note
        OPERATOR <-- SSAPI: Respond HTTP - <color #FF0000>201 (Created)</color>
    else
        note right of SSAPI #lightgray
            Log ERROR event
        end note
        note left of SSAPI #yellow
            {
                "status": 0,
                "code": <integer>,
                "message": <string>
            }
        end note
        OPERATOR <-- SSAPI: Respond HTTP - <color #FF0000>4xx (Client error)</color>
        deactivate SSAPI
        deactivate OPERATOR
    end
end
@enduml
